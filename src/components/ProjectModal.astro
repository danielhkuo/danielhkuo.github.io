---
import type { CollectionEntry } from 'astro:content';

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
---

<div id={`${project.id}-modal`} class="project-modal">
  <a href="#" class="modal-overlay" aria-label="Close modal"></a>
  <div class="modal-content-wrapper">
    <div class="modal-content">
      <a href="#" class="close-button" aria-label="Close modal">×</a>
      
      <!-- Project Header -->
      <div class="project-header">
        <div class="emoji-title">
          {project.data.emoji && <span class="emoji">{project.data.emoji}</span>}
          <h1 class="project-title">{project.data.title}</h1>
        </div>
        <p class="project-subtitle">{project.data.description}</p>
        
        <div class="project-meta">
          <div class="tech-stack">
            <span class="meta-label">Tech Stack:</span>
            <div class="tech-tags">
              {project.data.tech.map(tech => (
                <span class="tech-tag">{tech}</span>
              ))}
            </div>
          </div>
          <a 
            href={project.data.repoUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class="repo-link"
          >
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            View Repository
          </a>
        </div>
      </div>

      <!-- Project Content -->
      <article class="prose" set:html={project.body}></article>
    </div>
  </div>
</div>

<style>
.project-modal {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.3s ease, visibility 0s 0.3s;
  z-index: 1000;
}

.project-modal:target {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.3s ease;
}

.modal-overlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  cursor: pointer;
}

.modal-content-wrapper {
  position: relative;
  background: var(--card-bg);
  color: var(--text);
  border-radius: 1.5rem;
  max-width: 900px;
  width: 95%;
  max-height: 95vh;
  overflow: hidden;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 0 0 1px rgba(255, 255, 255, 0.05);
  transform: translateY(20px) scale(0.95);
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.project-modal:target .modal-content-wrapper {
  transform: translateY(0) scale(1);
  opacity: 1;
}

.modal-content {
  padding: 0;
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
}

.close-button {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  font-size: 1.75rem;
  color: var(--secondary);
  text-decoration: none;
  line-height: 1;
  transition: all 0.2s ease;
  z-index: 10;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
}

.close-button:hover {
  color: var(--primary);
  background: rgba(0, 0, 0, 0.2);
  transform: scale(1.1);
}

/* Project Header Styles */
.project-header {
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
  color: white;
  padding: 3rem 2.5rem 2rem;
  position: relative;
  overflow: hidden;
}

.project-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='m36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
  opacity: 0.1;
}

.emoji-title {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.emoji {
  font-size: 2.5rem;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.project-title {
  font-size: 2.25rem;
  font-weight: 800;
  margin: 0;
  line-height: 1.1;
  letter-spacing: -0.025em;
}

.project-subtitle {
  font-size: 1.25rem;
  margin: 0 0 2rem 0;
  opacity: 0.9;
  font-weight: 400;
  line-height: 1.4;
}

.project-meta {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.tech-stack {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.meta-label {
  font-size: 0.875rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  opacity: 0.8;
}

.tech-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tech-tag {
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  padding: 0.5rem 1rem;
  border-radius: 2rem;
  font-size: 0.875rem;
  font-weight: 500;
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.2s ease;
}

.tech-tag:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: translateY(-1px);
}

.repo-link {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  color: white;
  text-decoration: none;
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  font-weight: 600;
  font-size: 0.875rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.2s ease;
  align-self: flex-start;
}

.repo-link:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

/* Industry-Standard Prose Styles */
.prose {
  padding: 2.5rem;
  max-width: none;
  color: var(--text);
}

.prose :global(h1) {
  font-size: 2rem;
  font-weight: 800;
  line-height: 1.1;
  margin: 2.5rem 0 1.5rem 0;
  color: var(--primary);
  border-bottom: 3px solid var(--primary);
  padding-bottom: 0.75rem;
  letter-spacing: -0.025em;
}

.prose :global(h2) {
  font-size: 1.5rem;
  font-weight: 700;
  line-height: 1.2;
  margin: 2rem 0 1rem 0;
  color: var(--primary);
  position: relative;
  padding-left: 1rem;
}

.prose :global(h2::before) {
  content: '';
  position: absolute;
  left: 0;
  top: 0.125rem;
  width: 4px;
  height: 1.25rem;
  background: var(--accent);
  border-radius: 2px;
}

.prose :global(h3) {
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.3;
  margin: 1.5rem 0 0.75rem 0;
  color: var(--primary);
}

.prose :global(p) {
  font-size: 1rem;
  line-height: 1.7;
  margin: 1.25rem 0;
  color: var(--text);
}

.prose :global(ul) {
  margin: 1.25rem 0;
  padding-left: 0;
  list-style: none;
}

.prose :global(li) {
  position: relative;
  padding-left: 2rem;
  margin: 0.75rem 0;
  line-height: 1.6;
}

.prose :global(li::before) {
  content: '▸';
  position: absolute;
  left: 0;
  color: var(--accent);
  font-weight: bold;
  font-size: 1.1em;
}

.prose :global(strong) {
  font-weight: 700;
  color: var(--primary);
}

.prose :global(em) {
  font-style: italic;
  color: var(--accent);
}

.prose :global(code) {
  background: var(--background);
  color: var(--accent);
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
  font-size: 0.875em;
  border: 1px solid var(--secondary);
}

.prose :global(pre) {
  background: var(--background);
  padding: 1.5rem;
  border-radius: 0.75rem;
  overflow-x: auto;
  margin: 1.5rem 0;
  border: 1px solid var(--secondary);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.prose :global(pre code) {
  background: transparent;
  padding: 0;
  border: none;
  color: var(--text);
}

.prose :global(blockquote) {
  border-left: 4px solid var(--accent);
  padding: 1rem 1.5rem;
  margin: 1.5rem 0;
  background: var(--background);
  border-radius: 0 0.5rem 0.5rem 0;
  font-style: italic;
}

.prose :global(a) {
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
  transition: all 0.2s ease;
  border-bottom: 1px solid transparent;
}

.prose :global(a:hover) {
  color: var(--accent);
  border-bottom-color: var(--accent);
}

.prose :global(img) {
  max-width: 100%;
  height: auto;
  border-radius: 0.75rem;
  margin: 2rem 0;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease;
}

.prose :global(img:hover) {
  transform: scale(1.02);
}

/* Responsive Design */
@media (max-width: 768px) {
  .modal-content-wrapper {
    width: 98%;
    max-height: 98vh;
    border-radius: 1rem;
  }
  
  .project-header {
    padding: 2rem 1.5rem 1.5rem;
  }
  
  .project-title {
    font-size: 1.75rem;
  }
  
  .project-subtitle {
    font-size: 1rem;
  }
  
  .prose {
    padding: 1.5rem;
  }
  
  .project-meta {
    flex-direction: column;
    gap: 1rem;
  }
  
  .tech-tags {
    gap: 0.25rem;
  }
  
  .tech-tag {
    padding: 0.375rem 0.75rem;
    font-size: 0.8125rem;
  }
}

/* Scrollbar Styling */
.modal-content::-webkit-scrollbar {
  width: 8px;
}

.modal-content::-webkit-scrollbar-track {
  background: var(--background);
}

.modal-content::-webkit-scrollbar-thumb {
  background: var(--secondary);
  border-radius: 4px;
}

.modal-content::-webkit-scrollbar-thumb:hover {
  background: var(--primary);
}
</style> 